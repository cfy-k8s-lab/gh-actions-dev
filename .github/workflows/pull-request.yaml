name: Create pull-request
on:
  pull_request:
    types:
      - opened
      #- reopened
      #- synchronize
      #- labeled
    branches:
      - main

permissions:
  contents: read
  pull-requests: write

jobs:
  pull-request-required-checks-linting:
    name: Linting code
    runs-on: ubuntu-latest
    steps:
      - name: linting
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          PR_NUMBER=$(jq --raw-output .pull_request.number $GITHUB_EVENT_PATH)
          curl -X POST -H "Authorization: token $GITHUB_TOKEN" \
          -H "Accept: application/vnd.github.v3+json" \
          https://api.github.com/repos/${{ github.repository }}/check-runs \
          -d @- << EOF
          {
            "name": "Linting code",
            "head_sha": "${{ github.event.pull_request.head.sha }}",
            "status": "queued",
            "output": {
              "title": "Linting code",
              "summary": "Validace pomoci linting metody na cistotu kodu."
            }
          }
          EOF

  pull-request-required-checks-helmchart:
    name: Validate helmchart
    runs-on: ubuntu-latest
    steps:
      - name: helmchart valide
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          PR_NUMBER=$(jq --raw-output .pull_request.number $GITHUB_EVENT_PATH)
          curl -X POST -H "Authorization: token $GITHUB_TOKEN" \
          -H "Accept: application/vnd.github.v3+json" \
          https://api.github.com/repos/${{ github.repository }}/check-runs \
          -d @- << EOF
          {
            "name": "Helmchart validate",
            "head_sha": "${{ github.event.pull_request.head.sha }}",
            "status": "queued",
            "output": {
              "title": "Helmchart validate",
              "summary": "Kontrola, zda lze helmchart renderovat"
            }
          }
          EOF